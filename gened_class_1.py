# -*- coding: utf-8 -*-
"""GenEd_Class_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BSN4q-ctLgJ8C_rvBFckJEsszcK3PJZg

**What is Programing?**
  
  Program is the recipe that gives to the computer to conduct
  
  an automated task that human can do with extreme efforts and

  some time can't do.

**What is programming language?**

The language that use to create recipe for computer that

understand by computer is called "Programming language".

(Java,Python,JavaScript,C++..etc)

**Python**

**Topics**

- print()
- Data Types
- Variables


print() is the function to show something to user
"""

# String
print("This is Python Programming Language")

# integer value
print(34)

# float value
print(78.678)

# Boolean
print(True)

"""Data Types

--> Numaric (Integer, Float , Cmplex)

--> Dictionary

--> Boolean (True , False)

--> Set

--> Sequence (String , List ,Tuple)

**Numaric**
"""

# integer
print(34)

# Float
print(78.678)

# Complex
print(3+4j)

"""**String**"""

# string in single court
print('This is Python Programming Language')

# string in double court
print("This is Python Programming Language")

# string using variable
message = "This is Python Programming Language for bigginers."
print(message)

"""**Boolean**"""

# True
print(True)

# False
print(False)

"""**Variable**

Variables are conteners that have values of Any Data Type to

reuse in our code.


• Variable names can contain only letters, numbers, and underscores.They can start with a letter or an underscore, but not with a number.For instance, you can call a variable message_1 but not 1_message.

• Spaces are not allowed in variable names, but underscores can be used to separate words in variable names. For example, greeting_message works,but greeting message will cause errors.

• Avoid using Python keywords and function names as variable names;that is, do not use words that Python has reserved for a particular programmatic purpose, such as the word print.

• Variable names should be short but descriptive. For example, name is better than n, student_name is better than s_n, and name_length is better than length_of_persons_name.

• Be careful when using the lowercase letter l and the uppercase letter O because they could be confused with the numbers 1 and 0.


"""

student_name = "Ali"
print(student_name)

# use triple court to print multiline string
long_message = '''
Variable

Variables are conteners that have values of Any Data Type to

reuse in our code.

• Variable names can contain only letters, numbers, and underscores.They can start with a letter or an underscore, but not with a number.For instance, you can call a variable message_1 but not 1_message.

• Spaces are not allowed in variable names, but underscores can be used to separate words in variable names. For example, greeting_message works,but greeting message will cause errors.

• Avoid using Python keywords and function names as variable names;that is, do not use words that Python has reserved for a particular programmatic purpose, such as the word print.

• Variable names should be short but descriptive. For example, name is better than n, student_name is better than s_n, and name_length is better than length_of_persons_name.

• Be careful when using the lowercase letter l and the uppercase letter O because they could be confused with the numbers 1 and 0.
'''

print(long_message)

age = 44
name = "Ali"
print(f"My friend name is {name} and his age is {age}.")

# User Define
name = input("Enter your name: ")
age = int(input("Enter your age: "))
print(name,age)

name = input("Enter your name : ")
age = int(input("Enter your age : "))
city = input("Enter your city : ")
print(f"My friend name is {name} and his age is {age}.He is living in {city}.")

